{"mappings":"uDAcA,SAASA,EAASC,EAAMC,EAAMC,GAC5B,IAAIC,EAASC,EAAMC,EAASC,EAAWC,EAGvC,SAASC,IACP,IAAIC,EAAOC,KAAKC,MAAQL,EAEpBG,EAAOR,GAAQQ,GAAQ,EACzBN,EAAUS,WAAWJ,EAAOP,EAAOQ,IAEnCN,EAAU,KACLD,IACHK,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,M,CAXnB,MAAQH,IAAMA,EAAO,KAgBzB,IAAIa,EAAY,WACdT,EAAUU,KACVX,EAAOY,UACPV,EAAYI,KAAKC,MACjB,IAAIM,EAAUf,IAAcC,EAO5B,OANKA,IAASA,EAAUS,WAAWJ,EAAOP,IACtCgB,IACFV,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,MAGZG,C,EAoBT,OAjBAO,EAAUI,MAAQ,WACZf,IACFgB,aAAahB,GACbA,EAAU,K,EAIdW,EAAUM,MAAQ,WACZjB,IACFI,EAASP,EAAKa,MAAMR,EAASD,GAC7BC,EAAUD,EAAO,KAEjBe,aAAahB,GACbA,EAAU,K,EAIPW,C,CAITf,EAASsB,SAAWtB,EAEpBuB,EAAiBvB,ECnEjB,MAAMwB,EAASC,SAASC,cAAc,kBAChCC,EAAaF,SAASC,cAAc,SACpCE,EAAeH,SAASC,cAAc,YAItCG,EAAW,GAEjBL,EAAOM,iBAAiB,UAUxB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAa,IAAIC,SAASH,EAAII,eAC9BC,EAAU,CACdC,MAAOJ,EAAWK,IAAI,SACtBC,QAASN,EAAWK,IAAI,YAE1BE,QAAQC,IAAIL,GAEZL,EAAII,cAAcO,QAClBC,aAAaC,WAxBK,sB,IAKpBpB,EAAOM,iBAAiB,QAASe,EAAAtB,EAAA,EAEjC,SAAsBuB,GACpBjB,EAASiB,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,MACnCT,QAAQC,IAAI,8BAA+BK,EAAEC,OAAOC,MACpDL,aAAaO,QAVK,sBAUgBC,KAAKC,UAAUvB,IACjDW,QAAQC,IAAI,WAAYZ,E,GAN8B,MAsBxD,WACE,MAAMwB,EAAeV,aAAaW,QA5BhB,uBA6BZC,EAAWJ,KAAKK,MAAMH,GAC5Bb,QAAQC,IAAI,0BAA2Bc,GAEvCf,QAAQC,IAAI,8BAA+BY,GAEvCE,IACF5B,EAAWsB,MAAQM,EAASlB,MAE5BT,EAAaqB,MAAQM,EAAShB,Q,CAGlCkB","sources":["node_modules/debounce/index.js","src/js/03-feedback.js"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import debounce from 'debounce';\n\nconst formEl = document.querySelector('.feedback-form');\nconst EmailInput = document.querySelector('input');\nconst MessageInput = document.querySelector('textarea');\n\nconst STORAGE_KEY = 'feedback-form-state';\n\nconst formData = {};\n\nformEl.addEventListener('submit', OnFormSubmit);\nformEl.addEventListener('input', debounce(OnFormChange, 500));\n\nfunction OnFormChange(e) {\n  formData[e.target.name] = e.target.value;\n  console.log('OnFormChange  e.target.name', e.target.name);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n  console.log('formData', formData);\n}\n\nfunction OnFormSubmit(evt) {\n  evt.preventDefault();\n  const resultData = new FormData(evt.currentTarget);\n  const payLoad = {\n    email: resultData.get('email'),\n    message: resultData.get('message'),\n  };\n  console.log(payLoad);\n\n  evt.currentTarget.reset();\n  localStorage.removeItem(STORAGE_KEY);\n}\n\nfunction MessageOutput() {\n  const savedMessage = localStorage.getItem(STORAGE_KEY);\n  const psrsData = JSON.parse(savedMessage);\n  console.log('MessageOutput  psrsData', psrsData);\n\n  console.log('MessageOutput  savedMessage', savedMessage);\n\n  if (psrsData) {\n    EmailInput.value = psrsData.email;\n\n    MessageInput.value = psrsData.message;\n  }\n}\nMessageOutput();\n"],"names":["$815ad92c071f8c63$var$debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","debounce","$815ad92c071f8c63$exports","$945622fd0f572e60$var$formEl","document","querySelector","$945622fd0f572e60$var$EmailInput","$945622fd0f572e60$var$MessageInput","$945622fd0f572e60$var$formData","addEventListener","evt","preventDefault","resultData","FormData","currentTarget","payLoad","email","get","message","console","log","reset","localStorage","removeItem","$parcel$interopDefault","e","target","name","value","setItem","JSON","stringify","savedMessage","getItem","psrsData","parse","$945622fd0f572e60$var$MessageOutput"],"version":3,"file":"03-feedback.076bc2be.js.map"}